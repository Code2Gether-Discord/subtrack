@namespace subtrack.MAUI.Shared.Components

@inject NavigationManager Navigator

<div class="d-flex bg-primary rounded mb-1 fw-bold justify-content-between">
    <div class="p-1 ps-3">@_monthText</div>
    <div class="p-1 pe-3">@($"{SubscriptionMonth.Cost:C}")</div>
</div>

@foreach (var sub in SubscriptionMonth.Subscriptions)
{
    <div @onclick=@(() => Navigator.NavigateTo($"/details/{sub.Id}?ReturnUrl={Navigator.Uri}")) class="card mb-2 clickable" style="background-color:@sub.PrimaryColor">
        <div class="card-body" style="padding-top: 5px; padding-bottom: 5px;">
            <div class="d-flex justify-content-between align-items-center text-truncate">
                <div class="d-flex flex-column fs-5 text-truncate">
                    <div class="d-flex text-truncate">
                        @if (!string.IsNullOrWhiteSpace(sub.Icon))
                        {
                            <i class="@sub.Icon" style="color: @sub.SecondaryColor; margin-top:5px; margin-right:10px"></i>
                        }
                        <span class="d-inline-block text-truncate">@sub.Name</span>
                    </div>
                </div>

                <div class="d-flex flex-column">
                    <div class="d-flex justify-content-end">
                        <div class="me-1" style="font-size: 1.2rem">@($"{sub.Cost:C}")</div>
                    </div>
                    <div class="d-flex justify-content-end">
                        @if (sub.IsAutoPaid)
                        {
                            <i class="fa fa-repeat mt-1" aria-hidden="true" style="color: @sub.SecondaryColor;"></i>
                        }

                        @{
                            int daysUntilDue = (int)(sub.LastPayment - DateTime.Now.Date).TotalDays;
                        }
                        <div class="me-1 ms-1 @CssUtil.GetDueClass(daysUntilDue)">@($"{sub.LastPayment.Day}{GetDateSuffix(sub.LastPayment.Day)}")</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private string _monthText = null!;

    [Parameter]
    [EditorRequired]
    public SubscriptionsMonthResponse SubscriptionMonth { get; set; } = null!;

    [Parameter]
    public int? Year { get; set; } = null;

    protected override void OnParametersSet()
    {
        _monthText = Year is null ? SubscriptionMonth.MonthDate.MonthName() : $"{SubscriptionMonth.MonthDate.MonthName()} {Year}";
    }

    public string GetDateSuffix(int day)
    {
        return day switch
        {
            1 or 21 or 31 => "st",
            2 or 22 => "nd",
            3 or 23 => "rd",
            _ => "th"
        };
    }
}
