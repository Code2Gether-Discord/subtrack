@page "/monthly"
@inject subtrack.MAUI.Services.Abstractions.IDateProvider DateProvider
@inject subtrack.MAUI.Services.Abstractions.IMonthlyPageCalculator MonthlyPageCalculator

<AddSubscriptionButton />

@foreach (var subs in monthlySubscriptions)
{
    var displayYear = subs.Key != currentYear;
    @if (displayYear)
    {
        <h6 class="text-center mt-3 mb-2">@(subs.Key)</h6>
    }
    @foreach(var subMonth in subs)
    {
        <SubscriptionMonthItem Year=@(displayYear ? subs.Key : null) SubscriptionMonth=@subMonth />    
    }
}

@code {
    int currentYear;
    IEnumerable<IGrouping<int, SubscriptionsMonthResponse>> monthlySubscriptions = default!;
    protected override async Task OnInitializedAsync()
    {
        var fromDate = DateProvider.Today;
        currentYear = fromDate.Year;
        var futureYearsToDisplay = 2;

        var toDate = fromDate.AddYears(futureYearsToDisplay);
        monthlySubscriptions = await MonthlyPageCalculator.GetMonthlySubscriptionLists(fromDate.FirstDayOfMonthDate(), toDate.LastDayOfMonthDate());
    }
}