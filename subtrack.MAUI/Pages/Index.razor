@page "/"

@using subtrack.MAUI.Services.Abstractions
@using subtrack.MAUI.Responses;
@using subtrack.MAUI.Utilities;

@inject NavigationManager Navigator
@inject ISubscriptionService subscriptionService
@inject ISubscriptionsCalculator subscriptionsCalculator;

<AddSubscriptionButton />
<div class="container text-center">
    <div class="row">
        <div class="col-5">
            <h6 class="pt-1">Monthly</h6>
        </div>
        <div class="col-7">
            <h5>@($"~{Math.Round(_subscriptionsCost, 2):C}")</h5>
        </div>
    </div>
</div>

<div class="mt-2">
    @foreach (var sub in _subscriptionResponses)
    {
        <div @onclick=@(() => Navigator.NavigateTo($"/details/{sub.Id}?ReturnUrl={Navigator.Uri}")) id="subscription-card" class="card mb-3 clickable" style="background-color:@sub.PrimaryColor; border-color: @sub.SecondaryColor">
            <div class="card-body rounded" style="padding-top: 11px; padding-bottom: 11px;">
                <div class="d-flex justify-content-between align-items-center text-truncate">
                    <div class="d-flex flex-column fs-5 text-truncate">
                        <div class="d-flex text-truncate">
                            @if (!string.IsNullOrWhiteSpace(sub.Icon))
                            {
                                <i class="@sub.Icon" style="color: @sub.SecondaryColor; margin-top:5px; margin-right:10px"></i>
                            }
                            <span class="d-inline-block text-truncate">@sub.Name</span>
                        </div>

                    </div>

                    <div class="d-flex flex-column">
                        <div class="d-flex justify-content-end">
                            <div class="me-1" style="font-size:1.2rem">@($"{sub.Cost:C}")</div>
                        </div>
                        <div class="d-flex justify-content-end">
                            @if (sub.IsAutoPaid)
                            {
                                <i class="fa fa-repeat mt-1" aria-hidden="true" style="color: @sub.SecondaryColor;"></i>
                            }

                            <div class="me-1 ms-1 @CssUtil.GetDueClass(sub.DueDays)">@GetDueDaysText(sub.DueDays)</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code{
    private decimal _subscriptionsCost = 0;
    private IEnumerable<SubscriptionResponse> _subscriptionResponses;

    protected override async void OnInitialized()
    {
        var subscriptions = await subscriptionService.GetAllAsync();
        _subscriptionsCost = subscriptionsCalculator.GetMonthlyAverageCost(subscriptions);
        _subscriptionResponses = SubscriptionMapper.ToResponses(subscriptions, subscriptionsCalculator)
                                                   .OrderBy(sub => sub.DueDays)
                                                   .ToList();
    }

    private string GetDueDaysText(int dueDays)
    {
        return dueDays switch
        {
            1 => "1 day",
            -1 => "1 day ago",
            0 => "today",
            < 0 => $"{Math.Abs(dueDays)} days ago",
            > 0 => $"{dueDays} days",
        };
    }
}